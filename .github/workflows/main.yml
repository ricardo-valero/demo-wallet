permissions:
  contents: read
  pages: write
  id-token: write

on:
  push:
    branches: [ main ]

env:
  nix_conf: |
    substituters = https://cache.nixos.org/ https://nix-community.cachix.org https://cache.iog.io
    trusted-public-keys = cache.nixos.org-1:6NCHdD59X431o0gWypbMrAURkbJ16ZPMQFGspcDShjY= nix-community.cachix.org-1:mB9FSh9qf2dCimDSUo8Zy7bkq5CX+/rkCWyvRCYg3Fs= hydra.iohk.io:f/Ea+s+dFdN+3Y/G+FDgSq+a5NEWhJGzdjvKNGv0/EQ=
    keep-env-derivations = true
    keep-outputs = true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Check Nix flake inputs
        uses: DeterminateSystems/flake-checker-action@main
        with:
          fail-mode: true
      - name: Configure Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Install Nix
        uses: nixbuild/nix-quick-install-action@v30
        with:
          nix_conf: ${{ env.nix_conf }}
      - name: Cache Nix Store
        uses: nix-community/cache-nix-action@v6
        with:
          primary-key: nix-${{ runner.os }}-${{ hashFiles('flake.nix', 'flake.lock', '**/pnpm-lock.yaml', '**/package.json') }}
          paths: |
            ~/.pnpm
          purge: true
          purge-prefixes: nix-${{ runner.os }}-
          purge-created: 0
          purge-primary-key: never
          gc-max-store-size: 0
      - name: Pnpm - install dependencies
        run: nix run .#install
      - name: Vite - build project
        env:
          BASE_PATH: ${{ steps.pages.outputs.base_path }}
        run: nix run .#build
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: frontend/dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
